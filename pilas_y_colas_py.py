# -*- coding: utf-8 -*-
"""Pilas y Colas.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GPX_yLmyNvLu48U5Gev-gdaO1mgnplDs
"""

#Clase, Objetos, Atributos, Valores/variables

class Pila:
    # Representa una pila con operaciones de apilar, desapilar y verificar si está vacía.
    def __init__(self):
        # La pila vacía se representa con una lista vacía
        self.items=[]
        print("Se ha creado una lista vacia")

    def apilar(self, x):
        # Apilar es agregar al final de la lista.
        self.items.append(x)

    def desapilar(self):
        #Devuelve el elemento tope y lo elimina de la pila. Si la pila está vacía levanta una excepción.
        try:
            return self.items.pop()
        except IndexError:
            raise ValueError("La pila está vacía")
    
    def es_vacia(self):
        #Devuelve True si la lista está vacía, False si no.
        return self.items == []

    def tamanio(self):
        return len(self.items)

p = Pila()
p.apilar("Johann")
p.apilar("Marie")
p.apilar("Donna")

print(p.tamanio())

x = p.desapilar()
print(x)

x = p.desapilar()
print(x)

x = p.desapilar()
print(x)

#from clasePila import Pila

#Clase, Objetos, Atributos, Valores/variables

class Cola:
    # Representa una pila con operaciones de apilar, desapilar y verificar si está vacía.
    def __init__(self):
        # La pila vacía se representa con una lista vacía
        self.items=[]
        print("Se ha creado una lista vacia")

    def encolar(self, x):
        # Apilar es agregar al final de la lista.
        self.items.append(x)

    def desencolar(self):
        #Devuelve el elemento tope y lo elimina de la pila. Si la pila está vacía levanta una excepción.
        try:
            x = self.items[0]
            self.items.remove(self.items[0])
            print("El elemento '" + x + "' salió de la cola.")
            
        except IndexError:
            raise ValueError("La cola está vacía")
    
    def es_vacia(self):
        #Devuelve True si la lista está vacía, False si no.
        return self.items == []

    def tamanio(self):
      #Devuelve el tamaño de la cola
        return len(self.items)

    def lectura(self):
      #imprime la cola
        return(self.items)

p = Cola()
p.encolar("Johann")
p.encolar("Marie")
p.encolar("Donna")
x = p.desencolar()

p.lectura()

#from clasePila import Pila